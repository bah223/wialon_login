"""update_user_model_for_telegram

Revision ID: b94bebcda5c1
Revises: 1d8ec27adcbb
Create Date: 2025-04-25 12:17:48.485934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b94bebcda5c1'
down_revision: Union[str, None] = '1d8ec27adcbb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('saved_credentials', sa.Column('token', sa.String(), nullable=False))
    op.drop_constraint('saved_credentials_login_key', 'saved_credentials', type_='unique')
    op.drop_column('saved_credentials', 'last_used')
    op.drop_column('saved_credentials', 'password')
    op.drop_column('saved_credentials', 'login')
    op.add_column('users', sa.Column('telegram_username', sa.String(), nullable=True))
    op.add_column('users', sa.Column('wialon_username', sa.String(), nullable=True))
    op.add_column('users', sa.Column('wialon_password', sa.String(), nullable=True))
    op.alter_column('users', 'telegram_id',
               existing_type=sa.VARCHAR(),
               type_=sa.BigInteger(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'wialon_password')
    op.drop_column('users', 'wialon_username')
    op.drop_column('users', 'telegram_username')
    op.add_column('saved_credentials', sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('saved_credentials', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('saved_credentials', sa.Column('last_used', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_unique_constraint('saved_credentials_login_key', 'saved_credentials', ['login'])
    op.drop_column('saved_credentials', 'token')
    # ### end Alembic commands ###
